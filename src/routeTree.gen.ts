/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SupportImport } from './routes/support'
import { Route as SignupImport } from './routes/signup'
import { Route as PricingImport } from './routes/pricing'
import { Route as FeaturesImport } from './routes/features'
import { Route as AboutImport } from './routes/about'
import { Route as CoinCoinIdImport } from './routes/coin/$coinId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SupportRoute = SupportImport.update({
  id: '/support',
  path: '/support',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesRoute = FeaturesImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CoinCoinIdRoute = CoinCoinIdImport.update({
  id: '/coin/$coinId',
  path: '/coin/$coinId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/features': {
      id: '/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/support': {
      id: '/support'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportImport
      parentRoute: typeof rootRoute
    }
    '/coin/$coinId': {
      id: '/coin/$coinId'
      path: '/coin/$coinId'
      fullPath: '/coin/$coinId'
      preLoaderRoute: typeof CoinCoinIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/support': typeof SupportRoute
  '/coin/$coinId': typeof CoinCoinIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/support': typeof SupportRoute
  '/coin/$coinId': typeof CoinCoinIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/signup': typeof SignupRoute
  '/support': typeof SupportRoute
  '/coin/$coinId': typeof CoinCoinIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/features'
    | '/pricing'
    | '/signup'
    | '/support'
    | '/coin/$coinId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/features'
    | '/pricing'
    | '/signup'
    | '/support'
    | '/coin/$coinId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/features'
    | '/pricing'
    | '/signup'
    | '/support'
    | '/coin/$coinId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutRoute: typeof AboutRoute
  FeaturesRoute: typeof FeaturesRoute
  PricingRoute: typeof PricingRoute
  SignupRoute: typeof SignupRoute
  SupportRoute: typeof SupportRoute
  CoinCoinIdRoute: typeof CoinCoinIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutRoute: AboutRoute,
  FeaturesRoute: FeaturesRoute,
  PricingRoute: PricingRoute,
  SignupRoute: SignupRoute,
  SupportRoute: SupportRoute,
  CoinCoinIdRoute: CoinCoinIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/features",
        "/pricing",
        "/signup",
        "/support",
        "/coin/$coinId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/features": {
      "filePath": "features.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/support": {
      "filePath": "support.tsx"
    },
    "/coin/$coinId": {
      "filePath": "coin/$coinId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
